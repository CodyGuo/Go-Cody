/******************************************************************************
 *  版权所有（C）上海互普信息技术股份有限公司                 *
 *  保留所有权利。                                                            *
 ******************************************************************************
 *  作者 : zzhw
 *  版本 : <当前版本号>
 *****************************************************************************/
#include <Windows.h>
#include <string>
#include "HpMntIoCtrl.h"

using namespace std;

HANDLE OpenMntDriverDevice()
{
	 HANDLE	hMntDriverHandle = NULL;

	 hMntDriverHandle = CreateFileA(HNM_DEVICE_NAME, GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ|FILE_SHARE_WRITE, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, hMntDriverHandle); 

	 if (hMntDriverHandle == INVALID_HANDLE_VALUE)
	 {
		 hMntDriverHandle = CreateFileA(HNM_DEVICE_NAME, GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ|FILE_SHARE_WRITE , NULL, OPEN_EXISTING, 0, NULL);

#ifdef _DEBUG
		 string strPrin = "hMntDriverHandle == INVALID_HANDLE_VALUE hMntDriverHandle[";
		 strPrin += std::to_string((_ULonglong)hMntDriverHandle);
		 strPrin += "] error[";
		 strPrin += std::to_string((_ULonglong)GetLastError());
		 OutputDebugStringA(strPrin.c_str());
#endif
	 }

	 return hMntDriverHandle;
}

BOOL MntDeviceIOControl(LPVOID pInputBuf, DWORD dwInputLen, DWORD dwIoControlCode, LPVOID pOutputBuf, DWORD dwOutputLen)
{
	HANDLE hMntDriverHandle = NULL;
	BOOL bRet = FALSE;

	hMntDriverHandle = OpenMntDriverDevice();
	if (hMntDriverHandle != NULL)
	{
		ULONG ulBytesReturned = 0;
		
		bRet = DeviceIoControl(hMntDriverHandle, (DWORD)dwIoControlCode, pInputBuf, dwInputLen, pOutputBuf, dwOutputLen, &ulBytesReturned, NULL);

#ifdef _DEBUG
		string strPrint = "MntDeviceIOControl bret ";

		strPrint += std::to_string((_ULonglong)bRet);
		strPrint += "; GetLastError ";
		strPrint += std::to_string((_ULonglong)GetLastError());
		strPrint += "; ulBytesReturned ";
		strPrint += std::to_string((_ULonglong)ulBytesReturned);
		strPrint += "\n";

		OutputDebugStringA(strPrint.c_str());
#endif

		CloseHandle(hMntDriverHandle);
	}

	return bRet;
}

/************************************************************
 Description: LPCWSTR转String
 input: wstr[转换的字符串]
 Return:  返回转换的string
*************************************************************/
std::string WCharToAnsi(LPCWSTR pwszSrc)
{
    char* pszDst = NULL;
    std::string strTemp("");

    int nLen = WideCharToMultiByte(CP_ACP, 0, pwszSrc, -1, NULL, 0, NULL, NULL);

    if (nLen <= 0) 
    {
        return std::string("");
    }

    pszDst = new char[nLen];

    if (NULL == pszDst) 
    {
        return std::string("");
    }

    WideCharToMultiByte(CP_ACP, 0, pwszSrc, -1, pszDst, nLen, NULL, NULL);
    pszDst[nLen -1] = 0;

    strTemp = pszDst;

    delete [] pszDst;

    return strTemp;
}