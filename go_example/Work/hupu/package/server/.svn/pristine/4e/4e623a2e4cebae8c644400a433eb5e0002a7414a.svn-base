#pragma once

#include "DuilibConfig.h"
#include "GUISetting.h"

class CTipInfodlg : public CWindowWnd, public INotifyUI, public IMessageFilterUI
{
public:
	CTipInfodlg();
	LPCTSTR GetWindowClassName() const ;
	UINT GetClassStyle() const ;
	void OnFinalMessage(HWND /*hWnd*/);

	static void CALLBACK TimeProc(HWND hwnd, UINT message,UINT idTimer,DWORD dwTime);

	void Init(wchar_t *xmlpath,wchar_t *titlename,wchar_t *content,int itimeout,BOOL bsetfocus,BOOL bLinkEvent);

	void Notify(TNotifyUI& msg);

	LRESULT OnCreate(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnNcActivate(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnNcCalcSize(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnNcPaint(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnNcHitTest(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnSize(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT OnLButtonClick(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled);

	LRESULT HandleMessage(UINT uMsg, WPARAM wParam, LPARAM lParam);

	LRESULT MessageHandler(UINT uMsg, WPARAM wParam, LPARAM lParam, bool& bHandled);

public:
	CPaintManagerUI m_pm;
	static CTipInfodlg *tipdlgThis;
	DWORD m_currtime;
	UINT m_timeout;
	CStdString m_titlename;
	CStdString m_content;
	CStdString m_xmlpath;
	BOOL m_bsetfocus;
	BOOL m_blink;
	BOOL m_bClicked;
	BOOL m_bClose;
	GUISETTING  m_guisetting;
};
