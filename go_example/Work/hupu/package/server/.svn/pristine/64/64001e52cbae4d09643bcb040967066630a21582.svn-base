#ifndef __IOCOMMON__H
#define __IOCOMMON__H

#define FSCTL_PTUSERIO_BASE      FILE_DEVICE_NETWORK

#define _PTUSERIO_CTL_CODE(_Function, _Method, _Access)  \
    CTL_CODE(FSCTL_PTUSERIO_BASE, _Function, _Method, _Access)

#define IOCTL_PTUSERIO_ENUMERATE   \
    _PTUSERIO_CTL_CODE(0x201, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_OPEN_ADAPTER   \
    _PTUSERIO_CTL_CODE(0x202, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_QUERY_INFORMATION   \
    _PTUSERIO_CTL_CODE(0x203, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_SET_INFORMATION   \
    _PTUSERIO_CTL_CODE(0x204, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_START_WRITELOG   \
    _PTUSERIO_CTL_CODE(0x205, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_STOP_WRITELOG   \
    _PTUSERIO_CTL_CODE(0x206, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_STOP_DRIVERTHRED   \
	_PTUSERIO_CTL_CODE(0x207, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_SET_IPv4_BLOCK_FILTER   \
    _PTUSERIO_CTL_CODE(0x208, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_RESET_IPv6_BLOCK_STATISTICS   \
    _PTUSERIO_CTL_CODE(0x209, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)

#define IOCTL_PTUSERIO_SET_IPv6_BLOCK_FILTER   \
    _PTUSERIO_CTL_CODE(0x20A, METHOD_BUFFERED, FILE_READ_ACCESS | FILE_WRITE_ACCESS)


/////////////////////////////////////////////////////////////////////////////
//                     IP Block Definitions and Structures                 //
/////////////////////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////////////////////
//// SPECIFY STRUCTURE PACKING

#pragma pack(push,4)

typedef
struct _IPv4AddrStats
{
    ULONG    MPSendPktsCt;      // Packets through MPSendPackets.
    ULONG    MPSendPktsDropped; // Packets dropped in MPSendPackets.
    ULONG    PTRcvCt;           // Packets through PTReceive.
    ULONG    PTRcvDropped;      // Packets dropped in PTReceive.
    ULONG    PTRcvPktCt;        // Packets through PTReceivePacket.
    ULONG    PTRcvPktDropped;   // Packets dropped in PTReceivePacket.
}
IPv4AddrStats, *PIPv4AddrStats;

typedef
struct _PassthruStatistics
{
    // Number of array elements.
    ULONG         NumberElements;

    // The statistics.
    IPv4AddrStats Stats;
}
PassthruStatistics, *PPassthruStatistics;

typedef
struct _IPv4BlockAddrArray
{
    // Number of array elements.
    ULONG NumberElements;

    // The array.
    ULONG IPAddrArray[1];
}
IPv4BlockAddrArray, *PIPv4BlockAddrArray, **HIPv4BlockAddrArray;

#pragma pack(pop)

#endif // __IOCOMMON__H



