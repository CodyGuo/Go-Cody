#include "StdAfx.h"
#include "DuiRect.h"


CDuiRect::CDuiRect()
{
	left = top = right = bottom = 0;
}

CDuiRect::CDuiRect(const RECT& src)
{
	left = src.left;
	top = src.top;
	right = src.right;
	bottom = src.bottom;
}

CDuiRect::CDuiRect(int iLeft, int iTop, int iRight, int iBottom)
{
	left = iLeft;
	top = iTop;
	right = iRight;
	bottom = iBottom;
}

int CDuiRect::GetWidth() const
{
	return right - left;
}

int CDuiRect::GetHeight() const
{
	return bottom - top;
}

void CDuiRect::Empty()
{
	left = top = right = bottom = 0;
}

bool CDuiRect::IsNull() const
{
	return (left == 0 && right == 0 && top == 0 && bottom == 0); 
}

void CDuiRect::Join(const RECT& rc)
{
	if( rc.left < left ) left = rc.left;
	if( rc.top < top ) top = rc.top;
	if( rc.right > right ) right = rc.right;
	if( rc.bottom > bottom ) bottom = rc.bottom;
}

void CDuiRect::ResetOffset()
{
	::OffsetRect(this, -left, -top);
}

void CDuiRect::Normalize()
{
	if( left > right ) { int iTemp = left; left = right; right = iTemp; }
	if( top > bottom ) { int iTemp = top; top = bottom; bottom = iTemp; }
}

void CDuiRect::Offset(int cx, int cy)
{
	::OffsetRect(this, cx, cy);
}

void CDuiRect::Inflate(int cx, int cy)
{
	::InflateRect(this, cx, cy);
}

void CDuiRect::Deflate(int cx, int cy)
{
	::InflateRect(this, -cx, -cy);
}

void CDuiRect::Union(CDuiRect& rc)
{
	::UnionRect(this, this, &rc);
}
