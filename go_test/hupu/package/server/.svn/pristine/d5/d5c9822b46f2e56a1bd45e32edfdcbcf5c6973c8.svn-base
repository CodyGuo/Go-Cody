/******************************************************************************
 *  版权所有（C）上海互普信息技术有限公司                 *
 *  保留所有权利。                                                            *
 ******************************************************************************
 *  作者 : zzhw
 *  版本 : <当前版本号>
 *****************************************************************************/

#include "stdafx.h"
#include "CheckIEExtensions.h"
#include "SystemCheck.h"
#include "DebugInfo.h"
#include <Windows.h>

/************************************************************
 Description: 判断加载项是否禁用
 input: extensionClsid[加载项clsid]
 Return: ERROR_SUCCESS[加载项禁用]，否则[加载项没有被禁用]
*************************************************************/
 LONG ExtensionIsDisable(IN char* pClsid)
{
    string lpSubKey = "Software\\Microsoft\\Windows\\CurrentVersion\\Ext\\Settings\\";    
    HKEY hkResult = NULL;         
    DWORD dwType = REG_DWORD;
    DWORD dwFlag = 0;
    DWORD dwNameLen = sizeof(DWORD);
    CHAR* lpValueName = "Flags";   
    LONG lReturn = !ERROR_SUCCESS;           

    lpSubKey += pClsid;
    lReturn = RegOpenKeyExA(HKEY_CURRENT_USER, lpSubKey.c_str(), 0, KEY_READ|KEY_WOW64_64KEY, &hkResult);

    if (lReturn == ERROR_SUCCESS)
    {
        lReturn = RegQueryValueExA(hkResult, lpValueName, 0, &dwType, (LPBYTE)&dwFlag, &dwNameLen);
        if ( lReturn == ERROR_SUCCESS)
        {
			if (dwFlag == 1024)
			{
				lReturn = !ERROR_SUCCESS;
			}
			else
			{
				WriteDebugInfomation(LEVEL_RELEASE, MODULE_IEEXTENSIONS,  __FILE__, __LINE__, __FUNCTION__, pClsid);
				WriteDebugInfomation(LEVEL_RELEASE, MODULE_IEEXTENSIONS,  __FILE__, __LINE__, __FUNCTION__, "IE控件被禁用");
				OutputDebugStringA("IE控件被禁用\n");
			}
        }
    }

    return lReturn;
}

 /************************************************************
 Description: 启用加载项
 input: extensionClsid[加载项clsid]
 Return: ERROR_SUCCESS[启用加载项成功]，否则[加载项启用失败]
*************************************************************/
 LONG ExtensionEnable(IN char* pClsid)
 {
     string lpSubKey = "Software\\Microsoft\\Windows\\CurrentVersion\\Ext\\Settings\\";    
     LONG lReturn = !ERROR_SUCCESS;

     lpSubKey += pClsid;
     lReturn = SHDeleteKeyA(HKEY_CURRENT_USER, lpSubKey.c_str());

     if (lReturn == ERROR_SUCCESS)
     {
         WriteDebugInfomation(LEVEL_RELEASE, MODULE_IEEXTENSIONS,  __FILE__, __LINE__, __FUNCTION__, pClsid);
         WriteDebugInfomation(LEVEL_RELEASE, MODULE_IEEXTENSIONS,  __FILE__, __LINE__, __FUNCTION__, "IE控件启用成功");
         OutputDebugStringA("IE控件启用成功!\n");
     }

     return lReturn;
 }

 /************************************************************
 Description: 检查IE控件
 input: 
 Return: TRUE[加载项禁用或启用加载项成功]
         FALSE[加载项没有被禁用或加载项启用失败]
*************************************************************/
 LONG CheckIEExtensions()
 {
     LONG ret = FALSE;

     switch(g_extensionsClsid.m_iFlag)
     {
         case IEEXTENSIONS_DISABLE_FLAG:
             {
                if (ExtensionIsDisable(g_extensionsClsid.m_strClsid) == ERROR_SUCCESS)
                {
                    ret = TRUE;
                }
             }
             break;

         case IEEXTENSIONS_ENABLE_FLAG:
             {
                 if (ExtensionEnable(g_extensionsClsid.m_strClsid) == ERROR_SUCCESS)
                 {
                     ret = TRUE;
                 }
             }
             break;

         default:
             break;
     }
   
     return ret;
 }

 /************************************************************ 
 Description: 设置IE主页策略
 input:pIEMainPagePolicy[检查策略结构]
*************************************************************/
void SetIEExtensionsPolicy(IN EXTENSIONCLSID extensionClsid )
{
    g_extensionsClsid.m_iFlag = 0;
    memset(g_extensionsClsid.m_strClsid, 0, CLSID_NAME_LEN);

    g_extensionsClsid.m_iFlag = extensionClsid.m_iFlag;
    strncpy_s(g_extensionsClsid.m_strClsid, CLSID_NAME_LEN, extensionClsid.m_strClsid, CLSID_NAME_LEN);

    WriteDebugInfomation(LEVEL_DEBUG, MODULE_IEEXTENSIONS,  __FILE__, __LINE__, __FUNCTION__, g_extensionsClsid.m_strClsid);
}